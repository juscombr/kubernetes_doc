apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  creationTimestamp: null
  labels:
    io.kompose.service: app-core
  name: app-core
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: app-core
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      creationTimestamp: null
      labels:
        io.kompose.service: app-core
    spec:
      containers:
      - args:
        - bash
        - -c
        - rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'
        env:
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              key: DATABASE_HOST
              name: app
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            configMapKeyRef:
              key: MYSQL_ROOT_PASSWORD
              name: app
        - name: MYSQL_USER
          valueFrom:
            configMapKeyRef:
              key: MYSQL_USER
              name: app
        - name: SECRET_KEY
          valueFrom:
            configMapKeyRef:
              key: SECRET_KEY
              name: app
        - name: SECRET_KEY_BASE
          valueFrom:
            configMapKeyRef:
              key: SECRET_KEY_BASE
              name: app
        - name: RAILS_ENV
          valueFrom:
            configMapKeyRef:
              key: RAILS_ENV
              name: app      
        image: jusnavigandi/jus_core
        imagePullPolicy: Always
        name: app-core
        ports:
        - containerPort: 3000
        resources: {}
        stdin: true
        tty: true
      restartPolicy: Always
      serviceAccountName: ""
status: {}
